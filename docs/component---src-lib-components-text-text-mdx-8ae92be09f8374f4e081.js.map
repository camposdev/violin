{"version":3,"sources":["webpack:///../src/lib/components/Text/Text.mdx","webpack:///../node_modules/core-js/modules/es6.string.bold.js","webpack:///../src/lib/components/Text/style.js","webpack:///../src/lib/components/Text/Text.jsx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Text","Playground","Props","size","margin","bold","italic","of","color","noMargin","style","background","parentName","as","isMDXComponent","createHTML","this","StyledText","styled","ifProp","theme","involves","switchProp","small","body","lead","switchPalette","hasColor","defaultProps","nowrap"],"mappings":"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","file":"component---src-lib-components-text-text-mdx-8ae92be09f8374f4e081.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/felipecampos/Develop/violin/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Text } from './Text';\nimport { Playground, Props } from \"docz\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h1>\n    <Playground __position={0} __code={'<Text size=\\\"small\\\" margin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text margin>Lorem ipsum dolor</Text>\\n<Text size=\\\"lead\\\" margin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text margin bold>\\n  Lorem ipsum dolor\\n</Text>\\n<Text margin italic>\\n  Lorem ipsum dolor\\n</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n    <Text size=\"small\" margin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text margin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text size=\"lead\" margin mdxType=\"Text\">Lorem ipsum dolor</Text>\n      <Text margin bold mdxType=\"Text\">Lorem ipsum dolor</Text>\n      <Text margin italic mdxType=\"Text\">Lorem ipsum dolor</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Text} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"color\"\n    }}>{`color`}</h2>\n    <Playground __position={2} __code={'<Text color=\\\"white\\\" noMargin style={{ background: \\'gray\\' }}>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"default\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"primary\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"accent\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"error\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"alert\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"done\\\" noMargin>\\n  Lorem ipsum dolor\\n</Text>\\n<Text color=\\\"progress\\\">Lorem ipsum dolor</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n    <Text color=\"white\" noMargin style={{\n        background: \"gray\"\n      }} mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"default\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"primary\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"accent\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"error\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"alert\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"done\" noMargin mdxType=\"Text\">Lorem ipsum dolor</Text>\n    <Text color=\"progress\" mdxType=\"Text\">Lorem ipsum dolor</Text>\n    </Playground>\n    <h2 {...{\n      \"id\": \"use-with-another-element\"\n    }}>{`Use with another element`}</h2>\n    <p>{`By default `}<inlineCode parentName=\"p\">{`Text`}</inlineCode>{` is used with `}<inlineCode parentName=\"p\">{`p`}</inlineCode>{` element, to change use `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop:`}</p>\n    <Playground __position={3} __code={'<Text as=\\\"span\\\">Lorem ipsum dolor</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      Playground,\n      Props\n    }} mdxType=\"Playground\">\n    <Text as=\"span\" mdxType=\"Text\">Lorem ipsum dolor</Text>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","'use strict';\n// B.2.3.5 String.prototype.bold()\nrequire('./_string-html')('bold', function (createHTML) {\n  return function bold() {\n    return createHTML(this, 'b', '', '');\n  };\n});\n","import styled from \"styled-components\";\nimport { theme as involves } from \"../../theme\";\nimport { theme, ifProp, switchProp } from \"styled-tools\";\nimport switchPalette from \"../../utils/switchPalette\";\n\nexport const StyledText = styled.p`\n  margin: 0;\n  margin-bottom: ${ifProp(\n    \"margin\",\n    theme(\"spacing.space3\", involves.spacing.space3)\n  )};\n  font-size: ${switchProp(\"size\", {\n    small: theme(\"typography.fontSize.size1\", involves.typography.fontSize.size1),\n    body: theme(\"typography.fontSize.size2\", involves.typography.fontSize.size2),\n    lead: theme(\"typography.fontSize.size3\", involves.typography.fontSize.size3)\n  })};\n  font-weight: ${ifProp(\n    \"bold\",\n    theme(\"typography.fontWeight.bold\", involves.typography.fontWeight.bold)\n  )};\n  font-style: ${ifProp(\n    \"italic\",\n    \"italic\"\n  )};\n  color: ${ifProp(\n    \"hasColor\",\n    switchProp(\"hasColor\", switchPalette())\n  )};\n  white-space: ${ifProp(\"isNowrap\", \"nowrap\")};\n`;\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledText } from \"./style\";\n\nexport const Text = ({ color, ...props }) => (\n  <StyledText hasColor={color} {...props} />\n);\n\nText.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"body\", \"lead\"]),\n  color: PropTypes.oneOf([\"white\", \"default\", \"primary\", \"accent\", \"error\", \"alert\", \"done\", \"progress\"]),\n  bold: PropTypes.bool,\n  italic: PropTypes.bool,\n  /** Apply margin bottom */\n  margin: PropTypes.bool,\n  /** Avoid text to break  */\n  nowrap: PropTypes.bool\n};\n\nText.defaultProps = {\n  size: \"body\",\n  color: null,\n  bold: false,\n  italic: false,\n  margin: false,\n  nowrap: false\n};\n\n"],"sourceRoot":""}